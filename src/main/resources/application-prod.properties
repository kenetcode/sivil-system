# Configuracion para produccion en Render
# Usar variables separadas para evitar URL parsing issues
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=require
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate configuration - Usar nuestro esquema personalizado
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Ejecutar nuestros scripts SQL personalizados
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql
spring.sql.init.continue-on-error=true

# Server configuration - Puerto para Render
#server.port=${PORT:10000}

# Thymeleaf production settings
spring.thymeleaf.cache=true

# Security (usar variables de entorno)
spring.security.user.name=${ADMIN_USER:admin}
spring.security.user.password=${ADMIN_PASSWORD:admin}

# Jackson configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=America/El_Salvador

# JPA optimizations for production
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=false